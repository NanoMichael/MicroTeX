#ifndef TINYTEX_FONT_STYLE_H
#define TINYTEX_FONT_STYLE_H

#include "config.h"
#include "utils/utils.h"

namespace tinytex {

/** Enum represents all supported font style */
enum class FontStyle : u16 {
  none = 0,
  rm = 0b1,
  bf = 0b10,
  it = 0b100,
  cal = 0b1000,
  frak = 0b10000,
  bb = 0b100000,
  sf = 0b1000000,
  tt = 0b10000000,
  // composed styles
  bfit = bf | it,
  bfcal = bf | cal,
  bffrak = bf | frak,
  sfbf = bf | sf,
  sfit = it | sf,
  sfbfit = bf | it | sf,
  // invalid
  invalid = 0xffff
};

/**
 * Get the most similar font style from the given source font style.
 *
 * <p>
 * The similarity is measured by the number of set bits of the result
 * that generated by the bitwise operation '&' between source font style
 * and the composed font styles.
 */
FontStyle findClosestStyle(FontStyle src);

/** Test if the given font style is unspecified*/
bool TINYTEX_EXPORT isUnspecified(FontStyle style);

/** Test if the given font style is roman */
bool TINYTEX_EXPORT isRoman(FontStyle style);

/** Test if the given font style is bold */
bool TINYTEX_EXPORT isBold(FontStyle style);

/** Test if the given font style is italic */
bool TINYTEX_EXPORT isItalic(FontStyle style);

/** Test if the given font style is sans-serif */
bool TINYTEX_EXPORT isSansSerif(FontStyle style);

/** Test if the given font style is mono-spaced */
bool TINYTEX_EXPORT isMono(FontStyle style);

}

#endif //TINYTEX_FONT_STYLE_H
